---
description: This is for documentation
globs: *.mdx,*.md
alwaysApply: false
---
1. When writing developer documentation, do not use adjectives like "powerful" or "built-in" . These read like marketing copy, and developers don't like that. 
2. When writing developer documentation, do not use "complete" or "out-of-the-box", or "hands-on" either. Do not use overly enthusiastic exhortations, such as "Check out" or "Learn more" or "Explore". Do not use words like "essential" or "offers".
3. When writing developer documentation, do not use "your needs", "production-ready", "makes it easy", or "choose the right...solution". These are marketing jargon, and developers don't like that.
4. When writing developer documentation, do not use phrases like "without changing your code", "automatically handles", 
5. In general, avoid phrasing that feels like it glides between benefits without diving into details. For example, this is a bad sentence: "This makes it easy to build AI applications that maintain meaningful conversations and remember important details, whether you're building a simple chatbot or a sophisticated AI assistant." WE ARE WRITING FOR ENGINEERS WE NEED TO GET DOWN TO THE NUTS AND BOLTS.
6. Every tutorial under docs/content/docs/tutorials/examples/... should be a single MDX file that:
- Uses frontmatter (title:/description:) at the top.
- Keeps any explanatory text outside the fenced snippetâ€”reader instructions live in MDX prose, not as code comments.
- Extracts the meaningful content from `examples/...` to create tutorials.
7. Before creating a tutorial, reference @index.d.ts from packages/<package>/dist/index.d.ts.

TUTORIAL DOCUMENTATION TEMPLATE EXAMPLE:
[task-management.mdx](mdc:docs/content/docs/tutorials/examples/task-management.mdx)
